#include <stdio.h>
#include <stdlib.h>
#include <sys/wait.h>
#include <unistd.h>
#include <string.h>

int main (int nargs, char *args[]) {
  
  int pipefd[2];
  pipe(pipefd);
  int pid = fork();
  char buffer[500];

  // Checking if the number of agruments given are 2 
  if(nargs < 2){
    printf("Expecting more arguments\n");
    return(-1);
 }
  // Checking if fork() process was a failure

  if(pid == 0){
    printf("Child PID = %d\n", getpid());
    close(pipefd[1]);
    int nbytes = read(pipefd[0], buffer, sizeof(buffer));
    buffer[nbytes] = '\0';
    //printf("%d", nbytes);
    //printf( "parent: %s", buffer );
    if(strcmp(args[1], "/bin/echo")==0){
      execl("/bin/echo", "hello", "Hello World!",(char*)0);
      return 0;
    }
    execl(buffer, buffer, 0, 0);
    close(pipefd[0]);
    return 0;
  }

  if(pid > 0){
    printf("Parent PID = %d\n", getpid());
    close(pipefd[0]);
    //printf("%d",(strlen(args[1])));
    write(pipefd[1], args[1], (strlen(args[1])));
    close(pipefd[1]);
    wait(NULL);
    return 0;
  }
  return 0;
}

